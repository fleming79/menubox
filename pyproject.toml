[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "menubox"
description = ""
readme = "README.md"
requires-python = ">=3.12"
license = "MIT"
license-files = ['LICENSE']
keywords = []
authors = [{name = "Alan Fleming", email = "async-python@proton.me"}]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
]
dynamic = ["version"]
dependencies = [
  "IPython>8.17.1",
  "numpy",
  "pandas",
  "toolz",
  "traitlets>=5.14.3",
  "wrapt>=1.15.0",
  "fsspec>=2023.9.2",
  "orjson>=3.9.14",
  "ruamel.yaml>=0.18.6",
  "mergedeep",
  "psutil",
  "pyarrow",
  "docstring_to_markdown",
   "anyio",
  "async-kernel>=0.2.1",
  "ipylab @ https://github.com/fleming79/ipylab/releases/download/v2.0.0rc1/ipylab-2.0.0rc1.tar.gz#sha256:e26b78f843bdecf75a83c443ac550e93026ab3c7a2c1641347fce015079edb86"
]
[dependency-groups]
dev =[
  "hatch",
  "ruff",
  "pytest-cov >= 6",
  "pytest >= 8.3",
  "pre-commit",
  "pytest-mock",
  "pre-commit"
]

[project.urls]
Documentation = "https://github.com/fleming79/menubox#readme"
Issues = "https://github.com/fleming79/menubox/issues"
Source = "https://github.com/fleming79/menubox"

[tool.hatch.version]
path = "src/menubox/__about__.py"


[tool.hatch.envs.default.scripts]
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=menubox --cov=tests {args}"
no-cov = "cov --no-cov {args}"


[tool.hatch.metadata]
allow-direct-references = true


[tool.hatch.envs.hatch-static-analysis]
config-path = "ruff_defaults.toml"

[tool.coverage.run]
branch = true
parallel = true

filterwarnings = ["error", "ignore::UserWarning"]
[tool.ruff]
extend = "ruff_defaults.toml"
target-version = "py312"

[tool.ruff.lint.pylint]
max-args = 8
[tool.ruff.lint]
extend-select = [
  "PTH",  # flake8-use-pathlib
  "NPY",  # NumPy specific rules
  "PD",   # pandas-vet
  "FURB", # refurb
]
ignore = [
  "ARG002",
  "G004",
  "RUF002",
  "BLE001",
  "N802",
  "PD901",
  "PLR0912",
  "PLR0915",
  "PLR2004",
  "PLR0913",
  "SLF001",
  "TC004",
  "FBT002",
]
[tool.ruff.format]
docstring-code-format = true

[tool.codespell]
write = true
skip = "__py_cache__,dist,.gitignore"

[tool.pyright]
include = ["src", "tests"]
typeCheckingMode = 'standard'
